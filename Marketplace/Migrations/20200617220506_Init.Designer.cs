// <auto-generated />
using System;
using Marketplace.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Marketplace.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20200617220506_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Marketplace.Models.Item", b =>
                {
                    b.Property<byte[]>("ItemID")
                        .HasColumnType("varbinary(16)");

                    b.Property<string>("ItemName")
                        .HasColumnType("text");

                    b.Property<double>("ItemPrice")
                        .HasColumnType("double");

                    b.Property<byte[]>("ItemTypeID")
                        .IsRequired()
                        .HasColumnType("varbinary(16)");

                    b.HasKey("ItemID");

                    b.HasIndex("ItemTypeID");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("Marketplace.Models.ItemType", b =>
                {
                    b.Property<byte[]>("ItemTypeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varbinary(16)");

                    b.Property<string>("ItemTypeName")
                        .HasColumnType("text");

                    b.HasKey("ItemTypeID");

                    b.ToTable("ItemTypes");
                });

            modelBuilder.Entity("Marketplace.Models.Order", b =>
                {
                    b.Property<byte[]>("OrderID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varbinary(16)");

                    b.Property<string>("CustomerUserName")
                        .HasColumnType("text");

                    b.Property<DateTime?>("FulfilledDate")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsFulfilled")
                        .HasColumnType("bit");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime");

                    b.HasKey("OrderID");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("Marketplace.Models.SubOrder", b =>
                {
                    b.Property<byte[]>("SubOrderID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varbinary(16)");

                    b.Property<DateTime?>("DispatchDate")
                        .HasColumnType("datetime");

                    b.Property<byte[]>("ItemID")
                        .IsRequired()
                        .HasColumnType("varbinary(16)");

                    b.Property<byte[]>("OrderID")
                        .IsRequired()
                        .HasColumnType("varbinary(16)");

                    b.Property<double>("Price")
                        .HasColumnType("double");

                    b.Property<DateTime?>("ReturnDate")
                        .HasColumnType("datetime");

                    b.HasKey("SubOrderID");

                    b.HasIndex("OrderID");

                    b.ToTable("SubOrders");
                });

            modelBuilder.Entity("Marketplace.Models.Item", b =>
                {
                    b.HasOne("Marketplace.Models.SubOrder", null)
                        .WithOne("Item")
                        .HasForeignKey("Marketplace.Models.Item", "ItemID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Marketplace.Models.ItemType", "ItemType")
                        .WithMany("Items")
                        .HasForeignKey("ItemTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Marketplace.Models.SubOrder", b =>
                {
                    b.HasOne("Marketplace.Models.Order", "Order")
                        .WithMany("SubOrders")
                        .HasForeignKey("OrderID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
